services:
  api:
    container_name: evolution_api
    image: evoapicloud/evolution-api:latest
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    env_file:
      - .env
    expose:
      - 8080

  redis:
    image: redis:latest
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - evolution-net
    env_file:
      - .env

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    command: ["postgres", "-c", "max_connections=1000", "-c", "listen_addresses=*"]
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init/create_n8n.sql:/docker-entrypoint-initdb.d/01_create_n8n.sql
      - ./postgres-init/n8n_schema.sql:/docker-entrypoint-initdb.d/02_n8n_schema.sql
    networks:
      - evolution-net
    env_file:
      - .env
    expose:
      - 5432

  n8n:
    build:
      context: .
      dockerfile: Dockerfile-n8n
    container_name: n8n
    ports:
      - 5678:5678
    volumes:
      - n8n_data:/home/node/.n8n
    restart: always
    depends_on:
      - redis
      - postgres
    networks:
      - evolution-net
    env_file:
      - .env

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:
  n8n_data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
